1. Suma de elementos en paralelo: Escribe un programa que utilice múltiples hilos para calcular la suma de un gran número de elementos en un arreglo.
 Divide el arreglo en partes y asigna hilos separados para sumar cada parte. Luego, combina los resultados parciales para obtener la suma total.
desmenuzado:
0. crear "ar.com.dypsa.sumElementosParalelo.test" paquete 
1. Define el arreglo de elementos y el número de hilos que deseas utilizar.
2. Crea un objeto `ExecutorService` con un tamaño fijo igual al número de hilos.
3. Calcula el tamaño de cada parte del arreglo dividiendo su longitud entre el número de hilos.
4. Crea un arreglo de objetos `Future` para almacenar los resultados parciales.
5. Utiliza un bucle para dividir el arreglo en partes y asignar hilos separados para sumar cada parte. Para cada parte, calcula el índice de inicio y fin, y envía una tarea al `ExecutorService` utilizando el método `submit`, pasando un objeto `SumaParcial` con los parámetros adecuados.
6. Crea una variable para almacenar la suma total e inicialízala en cero.
7. Utiliza un bucle para recorrer el arreglo de objetos `Future` y sumar los resultados parciales a la suma total utilizando el método `get`.
8. Imprime la suma total.
9. Cierra el `ExecutorService` utilizando el método `shutdown`.
También necesitarás definir la clase `SumaParcial` que implementa la interfaz `Callable<Integer>`. 
Esta clase debe tener un constructor que reciba como parámetros el arreglo, el índice de inicio y el índice de fin de la parte a sumar. 
También debe implementar el método `call`, que calcula y devuelve la suma parcial de los elementos en la parte especificada del arreglo.
en resumen:
	 * Este código divide el arreglo en partes y asigna hilos separados para sumar
	 * cada parte utilizando la clase ExecutorService. Luego, combina los resultados
	 * parciales para obtener la suma total.